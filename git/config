[init]
	defaultBranch = main
[user]
	email = marlom.girardi@gmail.com
	name = Marlom Girardi
[core]
	editor = vim
	autocrlf = false
	whitespace = fix,-indent-with-non-tab,trailing-space,cr-at-eol
	excludesfile = ~/.config/git/ignore
	attributesfile = ~/.config/git/attributes
	pager = delta
[rerere]
	enabled = 1g
	autoupdate = 1
[fetch]
	prune = true
	pruneTags = true
	recurseSubmodules = true
[help]
	# Automatically correct and execute mistyped commands
	autocorrect = 1
[pretty]
	singleline = %C(yellow)%h %C(bold green)%d%C(reset) %s %C(245)(%an · %cr)%C(reset)
	multiline = %n%C(240)────────────%+n%C(auto)%H%C(auto)%D%C(reset)%n%C(cyan)%an%C(reset) · %C(green)%cr%C(reset)%n%+B
[merge]
	# Include summaries of merged commits in newly created merge commit messages
	log = true
	tool = vscode
[mergetool "vscode"]
	cmd = code --wait --merge $REMOTE $LOCAL $BASE $MERGED
[color]
	ui = true
[color "branch"]
	current = yellow bold
	local = green bold
	remote = cyan bold
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
	whitespace = red reverse
[color "status"]
	added = green bold
	changed = yellow bold
	untracked = red bold
[diff]
	tool = vscode
[difftool "vscode"]
	prompt = false
	cmd = code --wait --diff $LOCAL $REMOTE
[url "git@github.com:"]
	insteadOf = https://github.com/ # https://ricostacruz.com/til/github-always-ssh
[alias]
	a = add --all
	#############
	b = branch
	ba = branch --all
	bd = branch --delete
	br = branch --remotes

	# Remove branch from local and remote
	dblr = "!git branch -D $1; git push origin --delete $1"

	# Remove merged branches
	dm = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"

	#############
	# c = commit
	cm = commit -m
	cam = commit -am
	ca = commit --amend
	can = commit --amend --no-edit
	#############
	# cl = clone --recursive
	# cld = clone --depth 1
	#############
	# cp = cherry-pick
	# cpa = cherry-pick --abort
	# cpc = cherry-pick --continue
	#############
	# d = diff

	# Show the diff between the latest commit and the current state
	# dl = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"

	# `git di $number` shows the diff between the state `$number` revisions ago and the current state
	# di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"

	#############
	f = fetch
	fa = fetch --all --tags
	#############
	# fk = fsck
	#############
	# gcn = gc --prune=now
	#############
	l = log --graph --pretty=singleline
	lm = log --numstat --pretty=multiline
	find = !git l | fzf | cut -d ' ' -f1 | xargs -o git show
	#############
	m = merge
	ma = merge --abort
	mc = merge --continue
	#############
	fco = !git branch | grep "^[^*]" | fzf | sed -e 's/^[ ]*//' | xargs -o git checkout
	fcor = !git branch --remotes | awk '!/->/' | fzf | sed -e 's/^[ ]*//' | xargs -o git checkout --track

	# Go to a branch, creating it if necessary
	go = "!f() { git checkout -b \"$@\" 2> /dev/null || git checkout \"$@\"; }; f"

	#############
	# pr = prune -v
	#############
	ps = push
	psf = push --force-with-lease
	psu = push --set-upstream
	#############
	pl = pull
	#############
	rb = rebase
	rba = rebase --abort
	rbc = rebase --continue
	#############
	undo = reset HEAD^1
	rehh = reset --hard HEAD
	#############
	rmf = rm -f
	rmrf = rm -r -f
	#############
	s = status -sb
	#############
	sd = stash drop
	sl = stash list
	sp = stash pop
	ss = stash save
[gpg]
	program = /opt/homebrew/bin/gpg
	format = ssh
[commit]
	gpgsign = true
[pull]
	ff = only
[push]
	autoSetupRemote = true
